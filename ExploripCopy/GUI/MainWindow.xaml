<Window x:Class="ExploripCopy.GUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewmodels="clr-namespace:ExploripCopy.ViewModels"
        xmlns:converters="clr-namespace:ExploripCopy.Converters"
        xmlns:constants="clr-namespace:ExploripCopy.Constants"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=viewmodels:MainViewModels}"
        Title="MainWindow" Height="450" Width="800" Background="{Binding Source={x:Static constants:Colors.BackgroundColorBrush}}" BorderBrush="Transparent" BorderThickness="6" UseLayoutRounding="True"
        Closing="Window_Closing" Foreground="White" MouseMove="Window_MouseMove" Closed="Window_Closed" WindowStyle="None" ResizeMode="CanResizeWithGrip" StateChanged="Window_StateChanged">
    
    <WindowChrome.WindowChrome>
        <WindowChrome
            GlassFrameThickness="0"
            CaptionHeight="0"/>
    </WindowChrome.WindowChrome>
    
    <Grid x:Name="MainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        <TextBlock Grid.Column="0" Text="ExploripCopy" MouseRightButtonUp="TitleBar_MouseRightButtonUp" Name="TitleBar" MouseDown="TitleBar_MouseDown" MouseUp="TitleBar_MouseUp" Margin="5 0 0 0"/>
        <Button Grid.Column="1" Style="{DynamicResource MinimizeButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0" Padding="0" Name="MinimizeWindow" Click="MinimizeWindow_Click" IsTabStop="False"/>
        <Button Grid.Column="2" Style="{DynamicResource MaximizeButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0" Padding="0" Name="MaximizeWindow" Click="MaximizeWindow_Click" Visibility="{Binding WindowMaximized, Converter={converters:InverseBoolToVisibilityConverter}}" IsTabStop="False"/>
        <Button Grid.Column="2" Style="{DynamicResource RestoreButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0" Padding="0" Name="RestoreWindow" Click="RestoreWindow_Click" Visibility="{Binding WindowMaximized, Converter={converters:BoolToVisibilityConverter}}" IsTabStop="False"/>
        <Button Grid.Column="3" Style="{DynamicResource CloseButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0" Padding="0" Name="CloseWindow" Click="CloseWindow_Click" IsTabStop="False"/>

        <Grid Grid.Row="1" Name="CurrentProgress" Grid.ColumnSpan="4">
            <Grid.RowDefinitions>
                <RowDefinition Height="16"/>
                <RowDefinition Height="16"/>
                <RowDefinition Height="16"/>
                <RowDefinition Height="16"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            
            <!-- Current progress -->
            <Label Grid.Row="0" Content="{Binding CurrentFile, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" Foreground="{Binding Source={x:Static constants:Colors.ForegroundColorBrush}}" Padding="0"/>
            <ProgressBar Grid.Row="1" Name="ReportCurrentProgress" Value="{Binding CurrentProgress, UpdateSourceTrigger=PropertyChanged}" Minimum="0" Maximum="100" Foreground="{Binding Source={x:Static constants:Colors.AccentColorBrush}}"/>
            <TextBlock Grid.Row="1" Text="{Binding ElementName=ReportCurrentProgress, Path=Value, StringFormat={}{0:0}%}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <Label Grid.Row="2" Content="{Binding GlobalReport, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" Foreground="{Binding ColorGlobalReport}" Padding="0"/>
            <ProgressBar Grid.Row="3" Name="ReportGlobalProgress" Value="{Binding GlobalProgress, UpdateSourceTrigger=PropertyChanged}" Minimum="0" Maximum="{Binding MaxGlobalProgress}" Foreground="{Binding Source={x:Static constants:Colors.AccentColorBrush}}"/>
            <TextBlock Grid.Row="3" Text="{Binding TxtGlobalReport, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <Grid Grid.Row="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Label Grid.Column="1" Content="{Binding TxtCurrentSpeed, UpdateSourceTrigger=PropertyChanged}" Name="ShowCurrentSpeed" Background="Transparent" Foreground="{Binding Source={x:Static constants:Colors.ForegroundColorBrush}}" Padding="0" Margin="0 0 5 0"/>
                <Button Grid.Column="2" Content="Pause" HorizontalAlignment="Right" Name="BtnPause" Click="BtnPause_Click"/>
            </Grid>
            
            <!-- List operations are waiting -->
            <Grid Grid.Row="5" Name="ListOperations">
                <DataGrid x:Name="DgListWaiting" ItemsSource="{Binding ListWaiting, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Background="Black" Foreground="White" AutoGenerateColumns="False" CanUserAddRows="False" IsReadOnly="True" SelectionMode="Extended" SelectionUnit="FullRow" SelectedItem="{Binding SelectedLine, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Source}" Width="0.5*">
                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="Background" Value="Black"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Background" Value="Black"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding Destination}" Width="0.5*">
                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="Background" Value="Black"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Background" Value="Black"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </Grid>
    </Grid>
</Window>
