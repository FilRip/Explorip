<Window x:Class="ExploripComponents.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ExploripComponents"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:ui="http://schemas.modernwpf.com/2019"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=local:WpfExplorerViewModel}"
        ui:WindowHelper.UseModernWindowStyle="True"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <ResourceDictionary>
            <local:FileSizeConverter x:Key="sizeConverter"/>
            <BooleanToVisibilityConverter x:Key="boolToVisible"/>
        </ResourceDictionary>
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding RefreshCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseUp">
            <i:InvokeCommandAction Command="{Binding MouseUpCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="KeyUp">
            <i:InvokeCommandAction Command="{Binding KeyUpCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.25*"/>
            <ColumnDefinition Width="0.75*"/>
        </Grid.ColumnDefinitions>

        <!-- Left part, TreeView for folders -->
        <TreeView Grid.Column="0" Name="FolderTV" ItemsSource="{Binding FolderTreeView}" Margin="0 0 5 0" PreviewDragOver="Scroll_PreviewDragOver">
            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem" BasedOn="{StaticResource DefaultTreeViewItemStyle}">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="FontWeight" Value="Normal" />
                    <Setter Property="FontSize" Value="12" />
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Padding" Value="0,2,0,2"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="MinHeight" Value="0"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TreeView.ItemContainerStyle>

            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate 
                    DataType="{x:Type local:OneDirectory}" 
                    ItemsSource="{Binding Children}">
                    <Grid Margin="0" AllowDrop="True" Name="TreeItemGrid" Drop="TreeItemGrid_Drop" DragOver="AllowDrop_DragOver">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseRightButtonUp">
                                <i:InvokeCommandAction Command="{Binding ContextMenuBackgroundFolderCommand}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseMove">
                                <i:InvokeCommandAction Command="{Binding MouseMoveTreeViewCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16"/>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0" Margin="0">
                            <Image Source="{Binding Icon}"/>
                            <Image Source="{Binding IconOverlay}"/>
                        </Grid>
                        <TextBlock Grid.Column="2" Text="{Binding DisplayText}" Visibility="{Binding ReadOnlyBox, Converter={StaticResource boolToVisible}}"/>
                        <TextBox Text="{Binding NewName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="2" Visibility="{Binding RenameMode, Converter={StaticResource boolToVisible}}" Margin="0" x:Name="EditNameBox" IsVisibleChanged="EditBox_IsVisibleChanged"/>
                    </Grid>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
        
        <!-- Middle, splitter -->
        <GridSplitter Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Stretch" Width="5"/>

        <!-- Right part, ListView for files -->
        <ListView Grid.Column="1" Background="Transparent" Name="FileLV" ItemsSource="{Binding FileListView}"
                  SelectionMode="Extended" SelectionChanged="FileLV_SelectionChanged"
                  PreviewMouseDown="FileLV_PreviewMouseDown" AllowDrop="True" Drop="ListView_Drop" DragOver="AllowDrop_DragOver" PreviewDragOver="Scroll_PreviewDragOver"
                  VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling" ScrollViewer.ScrollChanged="FileLV_ScrollChanged">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseRightButtonUp">
                    <i:InvokeCommandAction Command="{Binding ContextMenuBackgroundFolderCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <EventSetter Event="MouseDoubleClick" Handler="ListViewItem_MouseDoubleClick"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <VirtualizingStackPanel Orientation="Vertical" AllowDrop="True" Name="FileViewStackPanel" Drop="FileViewStackPanel_Drop" DragOver="AllowDrop_DragOver" Opacity="{Binding Opacity}">
                        <Grid HorizontalAlignment="Stretch">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseRightButtonUp">
                                    <i:InvokeCommandAction Command="{Binding ContextMenuFilesCommand}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseMove">
                                    <i:InvokeCommandAction Command="{Binding MouseMoveCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Image Source="{Binding Icon}" Grid.Column="0"/>
                            <Image Source="{Binding IconOverlay}" Grid.Column="0"/>
                            <!-- Name -->
                            <TextBlock Text="{Binding DisplayText}" Grid.Column="1" Margin="5 0 0 0" Visibility="{Binding ReadOnlyBox, Converter={StaticResource boolToVisible}}"/>
                            <TextBox Text="{Binding NewName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Visibility="{Binding RenameMode, Converter={StaticResource boolToVisible}}" Margin="0" x:Name="EditNameBox" IsVisibleChanged="EditBox_IsVisibleChanged"/>
                            <!-- End name -->
                            <TextBlock Text="{Binding TypeName}" Grid.Column="2" HorizontalAlignment="Right" Margin="0 0 10 0"/>
                            <TextBlock Text="{Binding Size, Converter={StaticResource sizeConverter}}" Grid.Column="3" HorizontalAlignment="Right"/>
                        </Grid>
                    </VirtualizingStackPanel>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        
    </Grid>
</Window>
