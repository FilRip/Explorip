<Window x:Class="ExploripComponents.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ExploripComponents"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:ui="http://schemas.modernwpf.com/2019"
        xmlns:converters="clr-namespace:Explorip.Explorer.Converters;assembly=Explorip"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=local:WpfExplorerViewModel}"
        ui:WindowHelper.UseModernWindowStyle="True"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <ResourceDictionary>
            <Style TargetType="{x:Type local:ListViewEx}" BasedOn="{StaticResource {x:Type ListView}}" />
            <local:FileSizeConverter x:Key="sizeConverter"/>
            <BooleanToVisibilityConverter x:Key="boolToVisible"/>
            <!-- ListView -->
            <DataTemplate x:Key="IconsTemplate" DataType="local:OneFileSystem">
                <VirtualizingStackPanel AllowDrop="True" Name="FileViewStackPanel" Drop="FileViewStackPanel_Drop" DragOver="AllowDrop_DragOver" Opacity="{Binding Opacity}">
                    <Grid>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseRightButtonUp">
                                <i:InvokeCommandAction Command="{Binding ContextMenuFilesCommand}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseMove">
                                <i:InvokeCommandAction Command="{Binding MouseMoveCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.IconSizePx, TargetNullValue=16}"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Image Source="{Binding Icon}" Grid.Row="0" Margin="0"/>
                        <Image Source="{Binding IconOverlay}" Grid.Row="0" Margin="0"/>
                        <!-- Name -->
                        <TextBlock Grid.Row="1" Text="{Binding DisplayText}" Margin="0" Visibility="{Binding ReadOnlyBox, Converter={StaticResource boolToVisible}}" FontSize="14" TextWrapping="Wrap" Padding="0" MaxWidth="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.NameSizePx, TargetNullValue=16}" TextAlignment="Center"/>
                        <TextBox Grid.Row="1" Text="{Binding NewName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding RenameMode, Converter={StaticResource boolToVisible}}" FontSize="14" TextWrapping="Wrap" BorderThickness="0" TextAlignment="Center" Margin="0" x:Name="EditNameBox" IsVisibleChanged="EditBox_IsVisibleChanged" Padding="0" MaxWidth="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.NameSizePx, TargetNullValue=16}" LostFocus="EditNameBox_LostFocus"/>
                        <!-- End name -->
                    </Grid>
                </VirtualizingStackPanel>
            </DataTemplate>
            <DataTemplate x:Key="DetailsTemplate">
                <VirtualizingStackPanel Orientation="Vertical" AllowDrop="True" Name="FileViewStackPanel" Drop="FileViewStackPanel_Drop" DragOver="AllowDrop_DragOver" Opacity="{Binding Opacity}">
                    <Grid HorizontalAlignment="Stretch">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseRightButtonUp">
                                <i:InvokeCommandAction Command="{Binding ContextMenuFilesCommand}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseMove">
                                <i:InvokeCommandAction Command="{Binding MouseMoveCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.IconSizePx, TargetNullValue=16}"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Image Source="{Binding Icon}" Grid.Column="0" Margin="0"/>
                        <Image Source="{Binding IconOverlay}" Grid.Column="0" Margin="0"/>
                        <!-- Name -->
                        <TextBlock Text="{Binding DisplayText}" Grid.Column="1" Margin="5 0 0 0" Visibility="{Binding ReadOnlyBox, Converter={StaticResource boolToVisible}}" FontSize="12"/>
                        <TextBox Text="{Binding NewName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Visibility="{Binding RenameMode, Converter={StaticResource boolToVisible}}" Margin="0" x:Name="EditNameBox" IsVisibleChanged="EditBox_IsVisibleChanged" FontSize="12" LostFocus="EditNameBox_LostFocus"/>
                        <!-- End name -->
                        <TextBlock Text="{local:DateTimeBinding Path=LastModified}" Grid.Column="2" HorizontalAlignment="Right" Margin="0 0 10 0" FontSize="12"/>
                        <TextBlock Text="{Binding TypeName}" Grid.Column="3" HorizontalAlignment="Right" Margin="0 0 10 0" FontSize="12"/>
                        <TextBlock Text="{Binding Size, Converter={StaticResource sizeConverter}}" Grid.Column="4" HorizontalAlignment="Right" FontSize="12"/>
                    </Grid>
                </VirtualizingStackPanel>
            </DataTemplate>
            <local:ListViewItemTemplateSelector x:Key="ListViewItemTemplateSelector"/>
            <converters:InverseBoolToVisibilityConverter x:Key="inverseBoolToVisibility"/>
        </ResourceDictionary>
    </Window.Resources>
    
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding RefreshCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseUp">
            <i:InvokeCommandAction Command="{Binding MouseUpCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="KeyUp">
            <i:InvokeCommandAction Command="{Binding KeyUpCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseDoubleClick">
            <i:InvokeCommandAction Command="{Binding DoubleClickCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.25*"/>
            <ColumnDefinition Width="0.75*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="16"/>
        </Grid.RowDefinitions>
        
        <!-- Navigation bar -->
        <Grid Grid.Row="0" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="30"/>
            </Grid.ColumnDefinitions>

            <Button Grid.Column="0" Name="PreviousButton" IsEnabled="{Binding AllowNavigatePrevious}" BorderThickness="0" Content="&#xE760;" FontFamily="Segoe MDL2 Assets" FontSize="12" IsTabStop="False">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding NavigatePreviousCommand}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>

            <Button Grid.Column="1" Name="NextButton" IsEnabled="{Binding AllowNavigateNext}" BorderThickness="0" Content="&#xE761;" FontFamily="Segoe MDL2 Assets" FontSize="12" IsTabStop="False">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding NavigateNextCommand}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>

            <TextBlock Margin="5 0 0 0" Grid.Column="2" Name="CurrentPath" Visibility="{Binding ModeEditPath, Converter={StaticResource inverseBoolToVisibility}}" Foreground="Yellow" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
            <ComboBox Margin="5 0 0 0" Grid.Column="2" Name="EditPath" Visibility="{Binding ModeEditPath, Converter={StaticResource boolToVisible}}" ItemsSource="{Binding ComboBoxEditPath}" Text="{Binding EditPath}" IsEditable="True" Focusable="True" IsTabStop="False"
                      Foreground="Yellow"
                      IsDropDownOpen="{Binding ShowSuggestions}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="KeyDown">
                        <i:InvokeCommandAction Command="{Binding EditPathKeyDownCommand}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="LostFocus">
                        <i:InvokeCommandAction Command="{Binding LostFocusEditPathCommand}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="PreviewMouseDown">
                        <i:InvokeCommandAction Command="{Binding PreviewMouseDownCommand}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <TextBox Name="SearchText" Grid.Column="2" BorderThickness="2" Visibility="{Binding ModeSearch, Converter={StaticResource boolToVisible}}" Text="{Binding SearchTo}" Focusable="True" IsTabStop="False">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="KeyDown">
                        <i:InvokeCommandAction Command="{Binding SearchTextKeyDownCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>

            <Button Name="SearchButton" Grid.Column="3" Content="&#xE721;" FontFamily="Segoe MDL2 Assets" FontSize="12" IsTabStop="False" Focusable="False">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding SearchButtonClickCommand}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
        </Grid>

        <!-- Left part, TreeView for folders -->
        <TreeView Grid.Column="0" Grid.Row="1" Name="FolderTV" ItemsSource="{Binding FolderTreeView}" Margin="0 0 5 0" PreviewDragOver="Scroll_PreviewDragOver" SelectedItemChanged="FolderTV_SelectedItemChanged" Focusable="True">
            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem" BasedOn="{StaticResource DefaultTreeViewItemStyle}">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="FontWeight" Value="Normal" />
                    <Setter Property="FontSize" Value="12" />
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Padding" Value="0,2,0,2"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="MinHeight" Value="0"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TreeView.ItemContainerStyle>

            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate 
                    DataType="{x:Type local:OneDirectory}" 
                    ItemsSource="{Binding Children}">
                    <Grid Margin="0" AllowDrop="True" Name="TreeItemGrid" Drop="TreeItemGrid_Drop" DragOver="AllowDrop_DragOver" Opacity="{Binding Opacity}" PreviewDragEnter="AllowDrop_PreviewDragEnter">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseRightButtonUp">
                                <i:InvokeCommandAction Command="{Binding ContextMenuFolderCommand}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseMove">
                                <i:InvokeCommandAction Command="{Binding MouseMoveTreeViewCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16"/>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0" Margin="0">
                            <Image Source="{Binding TreeViewIcon}"/>
                            <Image Source="{Binding IconOverlay}"/>
                        </Grid>
                        <TextBlock Grid.Column="2" Text="{Binding DisplayText}" Visibility="{Binding ReadOnlyBox, Converter={StaticResource boolToVisible}}"/>
                        <TextBox Text="{Binding NewName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="2" Visibility="{Binding RenameMode, Converter={StaticResource boolToVisible}}" Margin="0" x:Name="EditNameBox" IsVisibleChanged="EditBox_IsVisibleChanged" Padding="0" BorderThickness="0" VerticalContentAlignment="Center" LostFocus="EditNameBox_LostFocus"/>
                    </Grid>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
        
        <!-- Middle, splitter -->
        <GridSplitter Grid.Column="0" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Stretch" Width="5"/>

        <!-- Right part, ListView for files -->
        <local:ListViewEx Grid.Column="1" Grid.Row="1" Background="Transparent" x:Name="FileLV" ItemsSource="{Binding CurrentGroupBy}"
                  SelectionMode="Extended" SelectionChanged="FileLV_SelectionChanged" Padding="0" Margin="0" BorderThickness="0"
                  AllowDrop="True" Drop="ListView_Drop" DragOver="AllowDrop_DragOver" PreviewDragOver="Scroll_PreviewDragOver" PreviewDragEnter="AllowDrop_PreviewDragEnter"
                  VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling" ScrollViewer.ScrollChanged="FileLV_ScrollChanged" VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                  ItemTemplateSelector="{StaticResource ListViewItemTemplateSelector}" Focusable="True" Visibility="{Binding ErrorVisible, Converter={StaticResource inverseBoolToVisibility}}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseRightButtonUp">
                    <i:InvokeCommandAction Command="{Binding ContextMenuBackgroundFolderCommand}" PassEventArgsToCommand="True"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseLeftButtonUp">
                    <i:InvokeCommandAction Command="{Binding SetFocusToListViewCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Margin" Value="0 0 5 5"/>
                    <EventSetter Event="MouseDoubleClick" Handler="ListViewItem_MouseDoubleClick"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.ViewDetails, TargetNullValue=False}" Value="True">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}" FontWeight="Bold" FontSize="18"/>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                    <GroupStyle.Panel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </GroupStyle.Panel>
                </GroupStyle>
            </ListView.GroupStyle>
        </local:ListViewEx>
        <TextBlock Grid.Column="1" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding ErrorMessage}" Visibility="{Binding ErrorVisible, Converter={StaticResource boolToVisible}}"/>
        
        <!-- State bar -->
        <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.ColumnSpan="2" Focusable="False">
            <TextBlock Text="{Binding NumberOfFiles}" FontSize="12" Margin="5,0,0,0"/>
            <TextBlock Text="{Binding NumberOfSelectedItems}" FontSize="12" Margin="5,0,0,0"/>
        </StackPanel>
    </Grid>
</Window>
