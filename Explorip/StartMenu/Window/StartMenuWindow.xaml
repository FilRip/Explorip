<Window x:Class="Explorip.StartMenu.Window.StartMenuWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Explorip.StartMenu"
        xmlns:viewmodels="clr-namespace:Explorip.StartMenu.ViewModels"
        xmlns:constants="clr-namespace:ExploripSharedCopy.Constants;assembly=ExploripSharedCopy"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:localization="clr-namespace:Explorip.Constants"
        mc:Ignorable="d"
        WindowStyle="None"
        ResizeMode="NoResize"
        Height="640" Width="760" Background="{x:Static constants:Colors.BackgroundColorBrush}"
        Topmost="True" ShowInTaskbar="False" IsVisibleChanged="Window_IsVisibleChanged">
    
    <Window.DataContext>
        <viewmodels:StartMenuViewModel/>
    </Window.DataContext>
    
    <Window.Resources>
        <Style x:Key="MyScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Border
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <ScrollContentPresenter
                                    x:Name="PART_ScrollContentPresenter"
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Grid.RowSpan="2"
                                    Grid.ColumnSpan="2"
                                    Margin="{TemplateBinding Padding}"
                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                    CanHorizontallyScroll="False"
                                    CanVerticallyScroll="False"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}" />
                                <ScrollBar
                                    x:Name="PART_VerticalScrollBar"
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    AutomationProperties.AutomationId="VerticalScrollBar"
                                    Maximum="{TemplateBinding ScrollableHeight}"
                                    Minimum="0"
                                    ViewportSize="{TemplateBinding ViewportHeight}"
                                    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                    Value="{TemplateBinding VerticalOffset}"
                                    Width="10" MinWidth="10" Style="{DynamicResource MyScrollBar}"/>
                                <ScrollBar
                                    x:Name="PART_HorizontalScrollBar"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    AutomationProperties.AutomationId="HorizontalScrollBar"
                                    Maximum="{TemplateBinding ScrollableWidth}"
                                    Minimum="0"
                                    Orientation="Horizontal"
                                    ViewportSize="{TemplateBinding ViewportWidth}"
                                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                    Value="{TemplateBinding HorizontalOffset}"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="MyVerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Track x:Name="PART_Track"
                Grid.Row="0"
                IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{DynamicResource MyScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{DynamicResource ScrollBarThumb}" Margin="1,0,1,0" BorderThickness="0" Background="{x:Static constants:Colors.AccentColorBrush}" BorderBrush="{x:Static constants:Colors.AccentColorBrush}" Foreground="{x:Static constants:Colors.AccentColorBrush}">
                    </Thumb>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{DynamicResource MyScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
        </ControlTemplate>
        <Style x:Key="MyScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MyScrollBar" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="Height" Value="18" />
                    <Setter Property="Template" Value="{DynamicResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="18" />
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{DynamicResource MyVerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <BooleanToVisibilityConverter x:Key="boolToVisible"/>
        
        <DataTemplate x:Key="MyDataTemplate" DataType="{x:Type viewmodels:StartMenuItemViewModel}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="1" Orientation="Horizontal" Background="{Binding BackgroundItem}">
                    <StackPanel.ContextMenu>
                        <ContextMenu Background="{x:Static constants:Colors.BackgroundColorBrush}" Foreground="{x:Static constants:Colors.ForegroundColorBrush}">
                            <ContextMenu.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Margin="-20,0,0,0" Background="{x:Static constants:Colors.BackgroundColorBrush}"/>
                                </ItemsPanelTemplate>
                            </ContextMenu.ItemsPanel>
                            <MenuItem Header="{x:Static localization:Localization.PIN_TO_STARTMENU}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <i:InvokeCommandAction Command="{Binding PinToStartMenuCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </MenuItem>
                        </ContextMenu>
                    </StackPanel.ContextMenu>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseUp">
                            <i:InvokeCommandAction Command="{Binding MouseUpCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseEnter">
                            <i:InvokeCommandAction Command="{Binding MouseEnterCommand}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseLeave">
                            <i:InvokeCommandAction Command="{Binding MouseLeaveCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="32"/>
                            <ColumnDefinition Width="{Binding SizeNameColumn}"/>
                            <ColumnDefinition Width="32"/>
                        </Grid.ColumnDefinitions>
                        <Image Source="{Binding Icon}" Grid.Column="0"/>
                        <TextBlock Text="{Binding Name}" Margin="5 0 0 0" Grid.Column="1" Foreground="{x:Static constants:Colors.ForegroundColorBrush}" VerticalAlignment="Center"/>
                        <TextBlock Grid.Column="2" FontFamily="Segoe MDL2 Assets" Text="&#xE96E;" FontSize="12" Foreground="{x:Static constants:Colors.ForegroundColorBrush}" Visibility="{Binding ShowDown, Converter={StaticResource boolToVisible}}" Background="Transparent" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                        <TextBlock Grid.Column="2" FontFamily="Segoe MDL2 Assets" Text="&#xE96D;" FontSize="12" Foreground="{x:Static constants:Colors.ForegroundColorBrush}" Visibility="{Binding ShowUp, Converter={StaticResource boolToVisible}}" Background="Transparent" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                    </Grid>
                </StackPanel>
                <Grid Grid.Row="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="10"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <ItemsControl Grid.Column="1" ItemsSource="{Binding Children}" Visibility="{Binding IsExpanded, Converter={StaticResource boolToVisible}}" ItemTemplate="{DynamicResource MyDataTemplate}"/>
                </Grid>
            </Grid>
        </DataTemplate>

        <ContextMenu x:Key="CmPanel" Background="{x:Static constants:Colors.BackgroundColorBrush}" Foreground="{x:Static constants:Colors.ForegroundColorBrush}">
            <ContextMenu.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Margin="-20,0,0,0" Background="{x:Static constants:Colors.BackgroundColorBrush}"/>
                </ItemsPanelTemplate>
            </ContextMenu.ItemsPanel>
            <MenuItem Header="{x:Static localization:Localization.RENAME_MENUITEM_WPF}" Name="RenameItem" Command="{Binding RenameCommand}"/>
            <MenuItem Header="{x:Static localization:Localization.UNPIN_FROM_STARTMENU}" Name="DeleteItem" Command="{Binding DeleteCommand}"/>
        </ContextMenu>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="60"/>
            <ColumnDefinition Width="270"/>
            <ColumnDefinition Width="430"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- First column, quick button -->
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="50"/>
            </Grid.RowDefinitions>
            <Button Background="Transparent" BorderThickness="0" Grid.Row="0" FontFamily="Segoe MDL2 Assets" FontSize="14" Content="&#xE700;" Foreground="{x:Static constants:Colors.ForegroundColorBrush}" Name="StartButton" Click="StartButton_Click" Focusable="True"/>
            <Button Background="Transparent" BorderThickness="0" Grid.Row="2" FontFamily="Segoe MDL2 Assets" FontSize="14" Content="&#xE748;" Foreground="{x:Static constants:Colors.ForegroundColorBrush}" Name="UserButton" Click="UserButton_Click" Focusable="True"/>
            <Button Background="Transparent" BorderThickness="0" Grid.Row="3" FontFamily="Segoe MDL2 Assets" FontSize="14" Content="&#xE713;" Foreground="{x:Static constants:Colors.ForegroundColorBrush}" Name="ParamButton" Click="ParamButton_Click" Focusable="True"/>
            <Button Background="Transparent" BorderThickness="0" Grid.Row="4" FontFamily="Segoe MDL2 Assets" FontSize="14" Content="&#xE7E8;" Foreground="{x:Static constants:Colors.ForegroundColorBrush}" Name="StopButton" Click="StopButton_Click" Focusable="True"/>
        </Grid>

        <!-- Second column, list of items in Start Menu -->
        <ItemsControl ItemsSource="{Binding StartMenuItems}" Grid.Column="1" ItemTemplate="{StaticResource MyDataTemplate}">
            <ItemsControl.Template>
                <ControlTemplate TargetType="ItemsControl">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Hidden" Style="{DynamicResource MyScrollViewerStyle}" MouseEnter="ScrollViewer_MouseEnter" MouseLeave="ScrollViewer_MouseLeave">
                        <ItemsPresenter/>
                    </ScrollViewer>
                </ControlTemplate>
            </ItemsControl.Template>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
        
        <!-- Third column, some free shortcut panel -->
        <Grid Grid.Column="2">
            <ListView ItemsSource="{Binding PinnedShortcut}" Background="Transparent" BorderThickness="0" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Margin="0" Padding="0" HorizontalAlignment="Center" Focusable="True" AllowDrop="True" Name="FirstPanel" Drop="FirstPanel_Drop">
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel/>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemTemplate>
                    <DataTemplate DataType="{x:Type viewmodels:PinnedShortutViewModel}">
                        <Grid Width="{Binding IconSizeWidth}" Height="{Binding IconSizeHeight}" Focusable="True" ContextMenu="{StaticResource CmPanel}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseUp">
                                    <i:InvokeCommandAction Command="{Binding MouseUpCommand}" PassEventArgsToCommand="True"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseEnter">
                                    <i:InvokeCommandAction Command="{Binding MouseEnterCommand}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseLeave">
                                    <i:InvokeCommandAction Command="{Binding MouseLeaveCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border BorderThickness="2" BorderBrush="{Binding BackgroundItem}" Grid.Column="0" Grid.Row="0" Background="{x:Static constants:Colors.SelectedBackgroundShellObject}" Width="100" Height="100"/>
                            <Image Source="{Binding Icon}" Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Center" Width="{Binding IconWidth}" Height="{Binding IconHeight}"/>
                            <TextBlock Text="{Binding Name}" Margin="2" VerticalAlignment="Bottom" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="0" Foreground="{x:Static constants:Colors.ForegroundColorBrush}" TextWrapping="Wrap" Background="Transparent"/>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="BorderThickness" Value="0"/>
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
        </Grid>

        <!-- Fourth column, some more free shortcut panel -->
        <Grid Grid.Column="3" Visibility="{Binding ShowPanel2, Converter={StaticResource boolToVisible}}">
            <ListView ItemsSource="{Binding PinnedShortcut2}" Background="Transparent" BorderThickness="0" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Margin="0" Padding="0" Visibility="{Binding ShowPanel2, Converter={StaticResource boolToVisible}}" HorizontalAlignment="Center" Focusable="True" AllowDrop="True" Drop="SecondPanel_Drop"  Name="SecondPanel">
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel/>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemTemplate>
                    <DataTemplate DataType="{x:Type viewmodels:PinnedShortutViewModel}">
                        <Grid Width="{Binding IconSizeWidth}" Height="{Binding IconSizeHeight}" Focusable="True" ContextMenu="{StaticResource CmPanel}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseUp">
                                    <i:InvokeCommandAction Command="{Binding MouseUpCommand}" PassEventArgsToCommand="True"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseEnter">
                                    <i:InvokeCommandAction Command="{Binding MouseEnterCommand}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseLeave">
                                    <i:InvokeCommandAction Command="{Binding MouseLeaveCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border BorderThickness="2" BorderBrush="{Binding BackgroundItem}" Grid.Column="0" Grid.Row="0" Background="{x:Static constants:Colors.SelectedBackgroundShellObject}" Width="100" Height="100"/>
                            <Image Source="{Binding Icon}" Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Center" Width="{Binding IconWidth}" Height="{Binding IconHeight}"/>
                            <TextBlock Text="{Binding Name}" Margin="2" VerticalAlignment="Bottom" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="0" Foreground="{x:Static constants:Colors.ForegroundColorBrush}" TextWrapping="Wrap" Background="Transparent"/>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="BorderThickness" Value="0"/>
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
        </Grid>
    </Grid>
</Window>
