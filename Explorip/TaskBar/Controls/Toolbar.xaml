<local:BaseToolbar x:Class="Explorip.TaskBar.Controls.Toolbar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Explorip.TaskBar.Controls"
             xmlns:constants="clr-namespace:Explorip.Constants"
             xmlns:colors="clr-namespace:ExploripSharedCopy.Constants;assembly=ExploripSharedCopy"
             xmlns:viewmodels="clr-namespace:Explorip.TaskBar.ViewModels"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             Loaded="UserControl_Loaded"
             Background="Transparent"
             Margin="{Binding Margin}">
    
    <local:BaseToolbar.DataContext>
        <viewmodels:ToolbarViewModel/>
    </local:BaseToolbar.DataContext>
    
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="MouseDown">
            <i:InvokeCommandAction Command="{Binding MouseDownCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseUp">
            <i:InvokeCommandAction Command="{Binding MouseUpCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseMove">
            <i:InvokeCommandAction Command="{Binding MouseMoveCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="IsVisibleChanged">
            <i:InvokeCommandAction Command="{Binding IsVisibleChangedCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    
    <local:BaseToolbar.Resources>
        <DataTemplate x:Key="SmallIconTemplate">
            <local:ToolbarButton DataContext="{Binding}"
                                 PreviewMouseLeftButtonUp="ToolbarIcon_OnPreviewMouseLeftButtonUp"
                                 PreviewMouseRightButtonUp="ToolbarIcon_OnPreviewMouseRightButtonUp"/>
        </DataTemplate>
        <DataTemplate x:Key="LargeIconTemplate">
            <local:ToolbarBigButton DataContext="{Binding}"
                                    PreviewMouseLeftButtonUp="ToolbarIcon_OnPreviewMouseLeftButtonUp"
                                    PreviewMouseRightButtonUp="ToolbarIcon_OnPreviewMouseRightButtonUp"/>
        </DataTemplate>
        <local:IconFileDataTemplateSelector x:Key="MyDataTemplateSelector"/>
        <BooleanToVisibilityConverter x:Key="boolToVisible"/>
    </local:BaseToolbar.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        <Label Content="&#xE759;" FontFamily="Segoe MDL2 Assets" Width="auto" Foreground="{x:Static colors:Colors.ForegroundColorBrush}" Grid.Column="0" Visibility="{Binding DataContext.ResizeOn, Converter={StaticResource boolToVisible}, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}"/>
        <Label Name="Title" Width="auto" Foreground="{x:Static colors:Colors.ForegroundColorBrush}" Grid.Column="1" Visibility="{Binding ShowTitle, Converter={StaticResource boolToVisible}}" Content="{Binding Title}">
            <Label.ContextMenu>
                <ContextMenu ItemsPanel="{DynamicResource MyMenuItemPanel}" Foreground="{x:Static colors:Colors.ForegroundColorBrush}" Background="{x:Static colors:Colors.BackgroundColorBrush}">
                    <MenuItem Header="{x:Static constants:Localization.SHOW_TITLE}" Name="ShowHideTitle" Command="{Binding ShowHideTitleCommand}" IsChecked="{Binding ShowTitle}"/>
                    <MenuItem Header="{x:Static constants:Localization.LARGE_ICON}" Name="ShowLargeIcon" Command="{Binding ShowLargeIconCommand}" IsChecked="{Binding CurrentShowLargeIcon}"/>
                    <Separator Style="{DynamicResource MySeparatorStyle}"/>
                    <MenuItem Header="{x:Static constants:Localization.CLOSE}" Name="CloseToolbar" Command="{Binding CloseToolbarCommand}"/>
                </ContextMenu>
            </Label.ContextMenu>
        </Label>
        <ItemsControl x:Name="ToolbarItems" Grid.Column="2"
                  Focusable="False" ItemsSource="{Binding ToolbarItems}"
                  Style="{DynamicResource ToolbarItems}" ItemTemplateSelector="{StaticResource MyDataTemplateSelector}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" Name="MyWrapPanel"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
        <Button Content=">>" Name="MoreItems" Command="{Binding ShowMoreItemsCommand}" Visibility="{Binding MoreItemsVisibility}" Grid.Column="3" Background="Transparent" Foreground="{x:Static colors:Colors.ForegroundColorBrush}"/>
    </Grid>
    
</local:BaseToolbar>
