<UserControl x:Class="Explorip.TaskBar.Controls.TaskButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:constants="clr-namespace:Explorip.Constants"
             xmlns:colors="clr-namespace:ExploripSharedCopy.Constants;assembly=ExploripSharedCopy"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:windowstask="clr-namespace:ManagedShell.WindowsTasks;assembly=ManagedShell.WindowsTasks"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance Type=windowstask:ApplicationWindow}"
             Loaded="TaskButton_OnLoaded"
             Unloaded="TaskButton_OnUnloaded" Background="Transparent" MouseEnter="AppButton_MouseEnter" MouseLeave="AppButton_MouseLeave">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="2"/>
        </Grid.RowDefinitions>
        <Button Name="AppButton" BorderThickness="0"
            Grid.Row="0"
            ToolTip="{Binding Path=Title}"
            Click="AppButton_OnClick"
            MouseUp="AppButton_OnMouseUp"
            PreviewMouseDown="AppButton_OnPreviewMouseDown"
            ContextMenuOpening="AppButton_OnContextMenuOpening"
            DragEnter="AppButton_OnDragEnter"
            DragLeave="AppButton_OnDragLeave">
            <Image Source="{Binding Path=Icon, Mode=OneWay}"
                   Style="{DynamicResource TaskIcon}"/>
            <Button.ContextMenu>
                <ContextMenu Background="{x:Static colors:Colors.BackgroundColorBrush}" Foreground="{x:Static colors:Colors.ForegroundColorBrush}" BorderBrush="{x:Static colors:Colors.ForegroundColorBrush}">
                    <ContextMenu.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Margin="-20,0,0,0" Background="{x:Static colors:Colors.BackgroundColorBrush}"/>
                        </ItemsPanelTemplate>
                    </ContextMenu.ItemsPanel>
                    <MenuItem Header="{x:Static constants:Localization.RESTORE}" BorderThickness="0"
                          Click="RestoreMenuItem_OnClick"
                          Background="{x:Static colors:Colors.BackgroundColorBrush}"
                          Foreground="{x:Static colors:Colors.ForegroundColorBrush}"
                          Name="RestoreMenuItem">
                        <MenuItem.Icon>
                            <TextBlock FontFamily="Marlett"
                                   Text="&#x32;"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{x:Static constants:Localization.MOVE}" BorderThickness="0"
                          Click="MoveMenuItem_OnClick"
                          Background="{x:Static colors:Colors.BackgroundColorBrush}"
                          Foreground="{x:Static colors:Colors.ForegroundColorBrush}"
                          Name="MoveMenuItem" />
                    <MenuItem Header="{DynamicResource size}" BorderThickness="0"
                          Click="SizeMenuItem_OnClick"
                          Background="{x:Static colors:Colors.BackgroundColorBrush}"
                          Foreground="{x:Static colors:Colors.ForegroundColorBrush}"
                          Name="SizeMenuItem" />
                    <MenuItem Header="{x:Static constants:Localization.MINIMIZE}" BorderThickness="0"
                          Click="MinimizeMenuItem_OnClick"
                          Background="{x:Static colors:Colors.BackgroundColorBrush}"
                          Foreground="{x:Static colors:Colors.ForegroundColorBrush}"
                          Name="MinimizeMenuItem">
                        <MenuItem.Icon>
                            <TextBlock FontFamily="Marlett"
                                   Text="&#x30;"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{x:Static constants:Localization.MAXIMIZE}" BorderThickness="0"
                          Click="MaximizeMenuItem_OnClick"
                          Background="{x:Static colors:Colors.BackgroundColorBrush}"
                          Foreground="{x:Static colors:Colors.ForegroundColorBrush}"
                          Name="MaximizeMenuItem">
                        <MenuItem.Icon>
                            <TextBlock FontFamily="Marlett"
                                   Text="&#x31;"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator BorderThickness="0"/>
                    <MenuItem Header="{x:Static constants:Localization.CLOSE}" BorderThickness="0"
                          FontWeight="Bold"
                          Background="{x:Static colors:Colors.BackgroundColorBrush}"
                          Foreground="{x:Static colors:Colors.ForegroundColorBrush}"
                          Click="CloseMenuItem_OnClick">
                        <MenuItem.Icon>
                            <TextBlock FontFamily="Marlett" 
                                   Text="&#x72;"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </Button.ContextMenu>
        </Button>
        <StackPanel Grid.Row="1" Background="{x:Static colors:Colors.AccentColorBrush}" Visibility="{Binding Launched, Converter={StaticResource BoolToVisibility}}"/>
    </Grid>
</UserControl>
