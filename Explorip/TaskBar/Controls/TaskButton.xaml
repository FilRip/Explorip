<UserControl x:Class="Explorip.TaskBar.Controls.TaskButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:constants="clr-namespace:Explorip.Constants"
             xmlns:colors="clr-namespace:ExploripSharedCopy.Constants;assembly=ExploripSharedCopy"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:windowstask="clr-namespace:ManagedShell.WindowsTasks;assembly=ManagedShell.WindowsTasks"
             xmlns:explorerConverters="clr-namespace:Explorip.Explorer.Converters"
             xmlns:converters="clr-namespace:Explorip.TaskBar.Converters"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance Type=windowstask:ApplicationWindow}"
             Loaded="TaskButton_OnLoaded"
             Unloaded="TaskButton_OnUnloaded" Background="Transparent" MouseEnter="AppButton_MouseEnter" MouseLeave="AppButton_MouseLeave" PreviewMouseUp="AppButton_OnPreviewMouseUp">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
        <converters:MultipleInstanceAlignmentConverter x:Key="multipleInstanceAlignmentConverter"/>
        <explorerConverters:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibility"/>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="2"/>
        </Grid.RowDefinitions>
        <Button Name="AppButton" BorderThickness="0" AllowDrop="True"
                Grid.Row="0"
                ToolTip="{Binding Title}"
                Click="AppButton_OnClick"
                PreviewMouseDown="AppButton_OnPreviewMouseDown"
                DragEnter="AppButton_OnDragEnter">
            <Grid Margin="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Image Source="{Binding Icon, Mode=OneWay}" Name="MyTaskIconBack" Margin="32,0,0,0"
                       Style="{DynamicResource TaskIcon}" HorizontalAlignment="Right" Visibility="{Binding MultipleInstanceLaunched, Converter={StaticResource BoolToVisibility}}"/>
                    <Image Source="{Binding Icon, Mode=OneWay}" Name="MyTaskIcon"
                           Style="{DynamicResource TaskIcon}" HorizontalAlignment="{Binding MultipleInstanceLaunched, Converter={StaticResource multipleInstanceAlignmentConverter}}"/>
            </Grid>
            <Button.ContextMenu>
                <ContextMenu Background="{x:Static colors:Colors.BackgroundColorBrush}" Foreground="{x:Static colors:Colors.ForegroundColorBrush}" BorderBrush="{x:Static colors:Colors.ForegroundColorBrush}" ItemsPanel="{DynamicResource MyMenuItemPanel}">
                    <MenuItem Header="{x:Static constants:Localization.OPEN_NEW_WINDOW}" Name="StartNewInstanceMenuItem" Click="StartNewInstanceMenuItem_Click"/>
                    <MenuItem Header="{x:Static constants:Localization.UNPIN_FROM_TASKBAR}" Visibility="{Binding IsPinnedApp, Converter={StaticResource BoolToVisibility}}" Name="UnpinMenuItem" Click="UnpinMenuItem_Click"/>
                    <MenuItem Header="{x:Static constants:Localization.PIN_TO_TASKBAR}" Visibility="{Binding IsPinnedApp, Converter={StaticResource InverseBoolToVisibility}}" Name="PinMenuItem" Click="PinMenuItem_Click"/>
                    <MenuItem Header="{x:Static constants:Localization.CLOSE}" Visibility="{Binding MultipleInstanceLaunched, Converter={StaticResource InverseBoolToVisibility}}" Name="CloseMenuItem" Click="CloseMenuItem_Click"/>
                    <MenuItem Header="{x:Static constants:Localization.CLOSE_ALL_WINDOW}" Visibility="{Binding MultipleInstanceLaunched, Converter={StaticResource BoolToVisibility}}" Name="CloseAllMenuItem" Click="CloseMenuItem_Click"/>
                </ContextMenu>
            </Button.ContextMenu>
        </Button>
        <StackPanel Grid.Row="1" Background="{x:Static colors:Colors.AccentColorBrush}" Visibility="{Binding Launched, Converter={StaticResource BoolToVisibility}}"/>
    </Grid>
</UserControl>
