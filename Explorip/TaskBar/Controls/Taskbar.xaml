<appbar:AppBarWindow x:Class="Explorip.TaskBar.Controls.Taskbar"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:controls="clr-namespace:Explorip.TaskBar.Controls"
                     xmlns:converters="clr-namespace:Explorip.TaskBar.Converters"
                     xmlns:utilities="clr-namespace:Explorip.TaskBar.Utilities"
                     xmlns:viewmodels="clr-namespace:Explorip.TaskBar.ViewModels"
                     xmlns:appbar="clr-namespace:ManagedShell.AppBar;assembly=ManagedShell.AppBar"
                     xmlns:localization="clr-namespace:Explorip.Constants"
                     xmlns:colors="clr-namespace:ExploripSharedCopy.Constants;assembly=ExploripSharedCopy"
                     xmlns:Config="clr-namespace:ExploripConfig.Configuration;assembly=ExploripConfig"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     Title="Explorip's taskbar"
                     Loaded="AppBarWindow_Loaded"
                     Left="0"
                     LocationChanged="Taskbar_OnLocationChanged"
                     AllowDrop="True"
                     PreviewMouseDown="Taskbar_MouseDown"
                     UseLayoutRounding="True"
                     Background="Transparent"
                     Style="{DynamicResource TaskbarWindow}">
    <Window.Resources>
        <ResourceDictionary>
            <BooleanToVisibilityConverter x:Key="boolToVisible"/>
        </ResourceDictionary>
    </Window.Resources>
    <WindowChrome.WindowChrome>
        <WindowChrome ResizeBorderThickness="0,3,0,0"
                      CaptionHeight="0"/>
    </WindowChrome.WindowChrome>
    <ContentControl Style="{DynamicResource Taskbar}">
        <DockPanel>
            <Grid x:Name="MainGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <controls:StartButton x:Name="StartButton" Grid.Column="0" Grid.RowSpan="2">
                    <DockPanel.Dock>
                        <Binding Path="DataContext.LeadingDockOrientation" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Window}" />
                    </DockPanel.Dock>
                </controls:StartButton>
                <controls:SearchButton x:Name="SearchButton" Grid.Column="1" Grid.RowSpan="2" Visibility="{Binding DataContext.SearchButtonVisible, Converter={StaticResource boolToVisible}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}">
                    <DockPanel.Dock>
                        <Binding Path="DataContext.LeadingDockOrientation" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Window}" />
                    </DockPanel.Dock>
                </controls:SearchButton>
                <controls:SearchZone HorizontalAlignment="Right" Grid.Column="1" Grid.RowSpan="2" Visibility="{Binding DataContext.SearchZoneVisible, Converter={StaticResource boolToVisible}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"/>
                <controls:TaskManButton x:Name="TaskManButton" Grid.Column="2" Grid.RowSpan="2" Visibility="{Binding DataContext.TaskManVisible, Converter={StaticResource boolToVisible}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}">
                    <DockPanel.Dock>
                        <Binding Path="DataContext.LeadingDockOrientation" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Window}" />
                    </DockPanel.Dock>
                </controls:TaskManButton>
                <controls:WidgetsButton x:Name="WidgetsButton" Grid.Column="3" Grid.RowSpan="2" Visibility="{Binding DataContext.WidgetsVisible, Converter={StaticResource boolToVisible}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}">
                    <DockPanel.Dock>
                        <Binding Path="DataContext.LeadingDockOrientation" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Window}" />
                    </DockPanel.Dock>
                </controls:WidgetsButton>
                <Grid Grid.Column="4" Grid.Row="0" Name="ToolsBars">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                </Grid>
                <controls:TaskList VerticalAlignment="Top" Grid.Column="4" Grid.Row="1" x:Name="MyTaskList"/>
                <GroupBox Style="{DynamicResource Tray}" Grid.Column="5" Grid.RowSpan="2">
                    <DockPanel.Dock>
                        <Binding Path="DataContext.TrailingDockOrientation" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Window}" />
                    </DockPanel.Dock>
                    <StackPanel Orientation="{Binding PanelOrientation}">
                        <controls:NotifyIconList VerticalAlignment="Center"/>
                        <controls:Clock VerticalAlignment="Center"/>
                    </StackPanel>
                </GroupBox>
                <controls:TabTipButton x:Name="TabTipButton" Grid.Column="6" Grid.RowSpan="2" Visibility="{Binding DataContext.TabTipVisible, Converter={StaticResource boolToVisible}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}">
                    <DockPanel.Dock>
                        <Binding Path="DataContext.LeadingDockOrientation" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Window}" />
                    </DockPanel.Dock>
                </controls:TabTipButton>
                <controls:LanguageButton x:Name="LanguageLayoutButton" Grid.Column="7" Grid.RowSpan="2" Visibility="{Binding DataContext.KeyboardLayoutVisible, Converter={StaticResource boolToVisible}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}">
                    <DockPanel.Dock>
                        <Binding Path="DataContext.LeadingDockOrientation" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Window}" />
                    </DockPanel.Dock>
                </controls:LanguageButton>
                <controls:NotificationButton x:Name="NotificationButton" Grid.Column="8" Grid.RowSpan="2">
                    <DockPanel.Dock>
                        <Binding Path="DataContext.LeadingDockOrientation" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Window}" />
                    </DockPanel.Dock>
                </controls:NotificationButton>
            </Grid>
        </DockPanel>
    </ContentControl>
    <appbar:AppBarWindow.ContextMenu>
        <ContextMenu Background="{x:Static colors:Colors.BackgroundColorBrush}" Foreground="{x:Static colors:Colors.ForegroundColorBrush}" BorderBrush="{x:Static colors:Colors.ForegroundColorBrush}" ItemsPanel="{DynamicResource MyMenuItemPanel}">
            <MenuItem Header="{x:Static localization:Localization.TASK_MANAGER}" Name="TaskManagerMenuItem" Command="{Binding ShowTaskMgrCommand}"/>
            <Separator/>
            <MenuItem Header="{x:Static localization:Localization.TOOLBAR}" Name="ToolbarSubMenu" Style="{DynamicResource MenuItemWithSubMenuStyle}">
                <MenuItem Header="{x:Static localization:Localization.SHOW_TITLE}" Name="ShowHideTitleToolbar" Click="ShowHideTitleToolbar_Click"/>
                <MenuItem Header="{x:Static localization:Localization.LARGE_ICON}" Name="ShowSmallLargeIcon" Click="ShowSmallLargeIcon_Click"/>
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static localization:Localization.SHOW_TASKBAR_ON_ALL_SCREENS}" Name="TaskbarAllScreenMenuItem" Command="{Binding TaskbarAllScreenCommand}"/>
            <MenuItem Header="{x:Static localization:Localization.UNLOCK_TASKBAR}" Name="UnlockTaskbar" Click="UnlockTaskbar_Click"/>
            <MenuItem Header="{x:Static localization:Localization.NEW_TOOLBAR}" Name="MenuAddToolbar" Click="AddToolbar_Click"/>
            <Separator/>
            <MenuItem Header="{x:Static localization:Localization.TASKBAR_SHOW_SEARCH}" Name="MenuShowSearch" Command="{Binding ShowSearchButtonCommand}" IsChecked="{Binding SearchButtonVisible}"/>
            <MenuItem Header="{x:Static localization:Localization.TASKBAR_SHOW_SEARCH_ZONE}" Name="MenuShowSearchZone" Command="{Binding ShowSearchZoneCommand}" IsChecked="{Binding SearchZoneVisible}"/>
            <MenuItem Header="{x:Static localization:Localization.TASKBAR_SHOW_TASKMGR}" Name="MenuShowTaskmgr" Command="{Binding ShowTaskManCommand}" IsCheckable="{Binding TaskManVisible}"/>
            <MenuItem Header="{x:Static localization:Localization.TASKBAR_SHOW_WIDGET}" Name="MenuShowWidget" Command="{Binding ShowWidgetsCommand}" IsChecked="{Binding WidgetsVisible}"/>
            <MenuItem Header="{x:Static localization:Localization.SHOW_VISUAL_KEYBOARD}" Name="MenuShowTabTip" Command="{Binding ShowHideTabTipCommand}" IsChecked="{Binding TabTipVisible}"/>
            <MenuItem Header="{x:Static localization:Localization.CHOICE_KEYBOARD_LAYOUT}" Name="MenuShowKeyboardLayout" Command="{Binding ShowKeyboardLayoutCommand}" IsChecked="{Binding KeyboardLayoutVisible}"/>
            <Separator/>
            <MenuItem Header="{x:Static localization:Localization.CUSTOM_COLOR}" Name="MenuCustomColor" Command="{Binding CustomColorCommand}"/>
            <MenuItem Header="{x:Static localization:Localization.SMALL_ICON_TASKBAR}" Name="MenuSmallIcon" Command="{Binding SmallIconTaskbarCommand}"/>
            <Separator/>
            <MenuItem Header="{x:Static localization:Localization.QUIT}" Name="ExitMenuItem" Command="{Binding ExitCommand}"/>
        </ContextMenu>
    </appbar:AppBarWindow.ContextMenu>
</appbar:AppBarWindow>
