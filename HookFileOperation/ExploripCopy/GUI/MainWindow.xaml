<Window x:Class="ExploripCopy.GUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewmodels="clr-namespace:ExploripCopy.ViewModels"
        xmlns:converters="clr-namespace:ExploripCopy.Converters"
        xmlns:constants="clr-namespace:ExploripCopy.Constants"
        xmlns:colors="clr-namespace:ExploripSharedCopy.Constants;assembly=ExploripSharedCopy"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=viewmodels:MainViewModels}"
        Title="MainWindow" Height="450" Width="800" Background="{x:Static colors:Colors.BackgroundColorBrush}" BorderBrush="Transparent" BorderThickness="6" UseLayoutRounding="True"
        Closing="Window_Closing" Foreground="{x:Static colors:Colors.ForegroundColorBrush}" MouseMove="Window_MouseMove" Closed="Window_Closed" WindowStyle="None" ResizeMode="CanResizeWithGrip" StateChanged="Window_StateChanged">

    <Window.Resources>
        <ResourceDictionary>
            <converters:InverseBoolToVisibilityConverter x:Key="inverseBoolToVisibility"/>
            <BooleanToVisibilityConverter x:Key="boolToVisibility"/>
        </ResourceDictionary>
    </Window.Resources>
    
    <WindowChrome.WindowChrome>
        <WindowChrome
            GlassFrameThickness="0"
            CaptionHeight="0"/>
    </WindowChrome.WindowChrome>
    
    <Grid x:Name="MainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        <TextBlock Grid.Column="0" Text="ExploripCopy" MouseRightButtonUp="TitleBar_MouseRightButtonUp" Name="TitleBar" MouseDown="TitleBar_MouseDown" MouseUp="TitleBar_MouseUp" Margin="5 0 0 0"/>
        <Button Grid.Column="1" Style="{DynamicResource MinimizeButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0" Padding="0" Name="MinimizeWindow" Click="MinimizeWindow_Click" IsTabStop="False"/>
        <Button Grid.Column="2" Style="{DynamicResource MaximizeButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0" Padding="0" Name="MaximizeWindow" Click="MaximizeWindow_Click" Visibility="{Binding WindowMaximized, Converter={StaticResource inverseBoolToVisibility}}" IsTabStop="False"/>
        <Button Grid.Column="2" Style="{DynamicResource RestoreButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0" Padding="0" Name="RestoreWindow" Click="RestoreWindow_Click" Visibility="{Binding WindowMaximized, Converter={StaticResource boolToVisibility}}" IsTabStop="False"/>
        <Button Grid.Column="3" Style="{DynamicResource CloseButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0" Padding="0" Name="CloseWindow" Click="CloseWindow_Click" IsTabStop="False"/>

        <Grid Grid.Row="1" Name="CurrentProgress" Grid.ColumnSpan="4">
            <Grid.RowDefinitions>
                <RowDefinition Height="16"/>
                <RowDefinition Height="16"/>
                <RowDefinition Height="16"/>
                <RowDefinition Height="16"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            
            <!-- Current progress -->
            <TextBlock Grid.Row="0" Text="{Binding CurrentFile, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" Foreground="{x:Static colors:Colors.ForegroundColorBrush}" Padding="0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            <ProgressBar Grid.Row="1" TextBlock.FontWeight="Bold" Name="ReportCurrentProgress" Tag="{Binding CurrentProgressPercent, UpdateSourceTrigger=PropertyChanged}" Value="{Binding CurrentProgress, UpdateSourceTrigger=PropertyChanged}" Minimum="0" Maximum="100" Foreground="{x:Static colors:Colors.AccentColorBrush}" Style="{DynamicResource MyProgressBarStyle}"/>
            <!-- Global progress -->
            <TextBlock Grid.Row="2" Text="{Binding GlobalReport, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" Foreground="{Binding ColorGlobalReport}" Padding="0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            <ProgressBar Grid.Row="3" TextBlock.FontWeight="Bold" Tag="{Binding TxtGlobalReport, UpdateSourceTrigger=PropertyChanged}" Name="ReportGlobalProgress" Value="{Binding GlobalProgress, UpdateSourceTrigger=PropertyChanged}" Minimum="0" Maximum="{Binding MaxGlobalProgress}" Foreground="{x:Static colors:Colors.AccentColorBrush}" Style="{DynamicResource MyProgressBarStyle}"/>
            
            <!-- Buttons -->
            <Grid Grid.Row="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Label Grid.Column="1" Content="{Binding TxtCurrentSpeed, UpdateSourceTrigger=PropertyChanged}" Name="ShowCurrentSpeed" Background="Transparent" Foreground="{x:Static colors:Colors.ForegroundColorBrush}" Padding="0" Margin="0 0 5 0"/>
                <Button Grid.Column="2" Content="{x:Static constants:Localization.STOP}" HorizontalAlignment="Right" Name="BtnStop" Command="{Binding IgnoreCurrentCommand}"/>
                <Button Grid.Column="3" Content="{x:Static constants:Localization.PAUSE}" HorizontalAlignment="Right" Name="BtnPause" Command="{Binding DoPauseCommand}"/>
            </Grid>
            
            <!-- List operations are waiting -->
            <Grid Grid.Row="5" Name="ListOperations">
                <DataGrid x:Name="DgListWaiting" ItemsSource="{Binding ListWaiting, UpdateSourceTrigger=PropertyChanged}" Background="Black" Foreground="White" AutoGenerateColumns="False" CanUserAddRows="False" SelectionMode="Extended" SelectionUnit="FullRow" SelectionChanged="DgListWaiting_SelectionChanged" CanUserResizeRows="False" HeadersVisibility="None">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Width="16">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Grid.Column="0" BorderThickness="0" Click="StartNow_Click" Background="Transparent">
                                        <Image Source="/ExploripCopy;component/Resources/StartNow.png"/>
                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Binding="{Binding Source}" Width="0.5*" IsReadOnly="True">
                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="Background" Value="{x:Static colors:Colors.BackgroundColorBrush}"/>
                                    <Setter Property="Foreground" Value="{x:Static colors:Colors.ForegroundColorBrush}"/>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Background" Value="{x:Static colors:Colors.BackgroundColorBrush}"/>
                                    <Setter Property="Foreground" Value="{x:Static colors:Colors.ForegroundColorBrush}"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding Destination}" Width="0.5*" IsReadOnly="True">
                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="Background" Value="{x:Static colors:Colors.BackgroundColorBrush}"/>
                                    <Setter Property="Foreground" Value="{x:Static colors:Colors.ForegroundColorBrush}"/>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Background" Value="{x:Static colors:Colors.BackgroundColorBrush}"/>
                                    <Setter Property="Foreground" Value="{x:Static colors:Colors.ForegroundColorBrush}"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>

                    <DataGrid.ContextMenu>
                        <ContextMenu Name="ListOperationMenu">
                            <MenuItem Header="{x:Static constants:Localization.REMOVE}" Command="{Binding RemoveLineCommand}"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                </DataGrid>
            </Grid>
        </Grid>
    </Grid>
</Window>
